name: Continuous Delivery

on:
  push:
    branches:
      - master

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      src_changed: ${{ steps.filter.outputs.src_changed }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Check for changes in src/
        id: filter
        run: |
          if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -Eq '(^|./)src/'; then
            echo "src_changed=true" >> $GITHUB_OUTPUT
          else
            echo "src_changed=false" >> $GITHUB_OUTPUT
          fi
  latest:
    name: Latest Release
    if: |
      github.event_name == 'push' &&
      github.ref == 'refs/heads/master' &&
      contains(github.event.head_commit.message, format('chore(release){0} release firefly@', ':'))
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest
          registries: |
            https://registry.npmjs.org/

      - name: Cache dependencies
        id: cache
        uses: actions/cache@v4
        with:
          path: ./node_modules
          key: ${{ runner.os }}-bun-${{ hashFiles('./bun.lock', './bun.lockb') }}

      - name: Install Dependencies
        if: ${{ steps.cache.outputs.cache-hit != 'true' }}
        run: bun install --frozen-lockfile

      - name: Build
        run: bun run build

      - name: Publish to NPM
        run: bun publish --registry=https://registry.npmjs.org --tag=latest

  next:
    name: Next Release
    needs: detect-changes
    if: |
      github.event_name == 'push' &&
      github.ref == 'refs/heads/master' &&
      needs.detect-changes.outputs.src_changed == 'true' &&
      !contains(github.event.head_commit.message, format('chore(release){0} release firefly@', ':'))
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest
          registries: |
            https://registry.npmjs.org/

      - name: Cache dependencies
        id: cache
        uses: actions/cache@v4
        with:
          path: ./node_modules
          key: ${{ runner.os }}-bun-${{ hashFiles('./bun.lock', './bun.lockb') }}

      - name: Install Dependencies
        if: ${{ steps.cache.outputs.cache-hit != 'true' }}
        run: bun install --frozen-lockfile

      - name: Bump Version
        run: bun run dev release --ci --bs auto --rt prerelease --pre-release-id "next.$(git rev-parse --verify --short HEAD)" --skip-changelog --skip-git

      - name: Build
        run: bun run build

      - name: Publish to NPM (next)
        run: bun publish --registry=https://registry.npmjs.org --tag=next
